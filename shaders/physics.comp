#version 450

layout ( local_size_x = 16, local_size_y = 1, local_size_z = 1 ) in;

struct Node {
    vec3 p;
    int v;
};
layout(std430, binding = 0 ) buffer Locations {
    Node nodes[];
} node_buffer;

layout( push_constant ) uniform PushConstants
{
    int nodes;
    float repulsion;
} constants;

void main()
{
    ivec2 p = ivec2( gl_GlobalInvocationID.xy );
    int id = p.x;

    if( id >= constants.nodes ) return;

    vec3 force = vec3(0);
    Node n1 = node_buffer.nodes[id];

    for( int i = 0; i < constants.nodes; i++ ) {
        Node n2 = node_buffer.nodes[i];

        vec3 diff = n2.p - n1.p;
        float l = length(diff);
        if( l >= 0.001 ) {
            force -= normalize(diff) * 0.0000001 * constants.repulsion / (l * l);
        }
    }

    force += -n1.p * 0.014;

    node_buffer.nodes[id].p += force;
}