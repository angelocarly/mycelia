#version 450

layout ( local_size_x = 128, local_size_y = 1, local_size_z = 1 ) in;

struct Node {
    vec4 p;
    ivec4 i;
};
layout(std430, binding = 0 ) buffer LocationsIn {
    Node nodes[];
} node_buffer_in;

/* A buffer with all nodes contained by the cells */
layout(std430, binding = 1 ) buffer SpatialOrdering {
    int nodes[];
} spatial_ordering;

/* Maps a cell-id to the respective nodes index, as well as element count */
struct CellLookup {
    int order_index;
    int element_count;
};
layout(std430, binding = 2 ) buffer SpatialLookup {
    CellLookup cells[];
} spatial_lookup;

layout( push_constant ) uniform PushConstants
{
    int node_count;
    int group_width;
    int step_index;
} constants;

void main()
{
    ivec2 p = ivec2( gl_GlobalInvocationID.xy );
    int id = p.x;

    if( id >= constants.node_count ) return;

    //Node n1 = node_buffer_in.nodes[id];
}