#version 450

layout ( local_size_x = 128, local_size_y = 1, local_size_z = 1 ) in;

struct Node {
    vec4 p;
    ivec4 i;
};
layout(std430, binding = 0 ) buffer LocationsIn {
    Node nodes[];
} node_buffer_in;

/* A buffer with all nodes contained by the cells */
struct Ordering {
    uint node_id;
    uint cell_id;
};
layout(std430, binding = 2 ) buffer SpatialOrdering {
    Ordering lookup[];
} spatial_ordering;

/* Maps a cell-id to the respective nodes index, as well as element count */
struct CellLookup {
    uint order_index;
};
layout(std430, binding = 3 ) buffer SpatialLookup {
    CellLookup cells[];
} spatial_lookup;

layout( push_constant ) uniform PushConstants
{
    uint node_count;
    uint group_width;
    uint group_height;
    uint step_index;
} constants;

void main()
{
    ivec2 p = ivec2( gl_GlobalInvocationID.xy );
    int id = p.x;

    if( id >= constants.node_count - 1 ) return;

    Ordering value_low = spatial_ordering.lookup[id];
    Ordering value_high = spatial_ordering.lookup[id + 1];

    if( id == 0 ) {
        spatial_lookup.cells[value_low.cell_id].order_index = 0;
    }

    if( value_low.cell_id != value_high.cell_id )
    {
        spatial_lookup.cells[value_high.cell_id].order_index = id + 1;
    }

}